#ifndef __PAL_SENSORS_H__
#define __PAL_SENSORS_H__

#define MAX_SENSOR_NUM         (0xFF)

#define MB_INLET_TEMP_DEVICE  "/sys/class/hwmon/hwmon2/"
#define MB_OUTLET_TEMP_DEVICE "/sys/class/hwmon/hwmon3/"

enum {
  MB_SENSOR_PCH_TEMP = 0x08,
  MB_SENSOR_CPU0_THERM_MARGIN = 0x09,
  MB_SENSOR_CPU1_THERM_MARGIN = 0x0A,

  MB_SENSOR_HSC_IN_POWER = 0x29,
  MB_SENSOR_HSC_IN_VOLT = 0x2A,
  MB_SENSOR_CPU0_PKG_POWER = 0x2C,
  MB_SENSOR_CPU1_PKG_POWER = 0x2D,

  MB_SENSOR_CPU0_TJMAX = 0x30,
  MB_SENSOR_CPU1_TJMAX = 0x31,

  MB_SENSOR_PROCESSOR_FAIL = 0x65,

  MB_SENSOR_C2_NVME_CTEMP = 0x7B,
  MB_SENSOR_C3_NVME_CTEMP = 0x7C,
  MB_SENSOR_C4_NVME_CTEMP = 0x7D,

  MB_SENSOR_C4_AVA_FTEMP = 0x7E,
  MB_SENSOR_C4_AVA_RTEMP = 0x7F,

  MB_SENSOR_C2_AVA_FTEMP = 0x80,
  MB_SENSOR_C2_AVA_RTEMP = 0x81,
  MB_SENSOR_C2_1_NVME_CTEMP = 0x82,
  MB_SENSOR_C2_2_NVME_CTEMP = 0x83,
  MB_SENSOR_C2_3_NVME_CTEMP = 0x84,
  MB_SENSOR_C2_4_NVME_CTEMP = 0x85,
  MB_SENSOR_C3_AVA_FTEMP = 0x86,
  MB_SENSOR_C3_AVA_RTEMP = 0x87,
  MB_SENSOR_C3_1_NVME_CTEMP = 0x88,
  MB_SENSOR_C3_2_NVME_CTEMP = 0x89,
  MB_SENSOR_C3_3_NVME_CTEMP = 0x8A,
  MB_SENSOR_C3_4_NVME_CTEMP = 0x8B,
  MB_SENSOR_C4_1_NVME_CTEMP = 0x8C,
  MB_SENSOR_C4_2_NVME_CTEMP = 0x8D,
  MB_SENSOR_C4_3_NVME_CTEMP = 0x8E,
  MB_SENSOR_C4_4_NVME_CTEMP = 0x8F,

  MB_SENSOR_C2_P12V_INA230_VOL = 0x90,
  MB_SENSOR_C2_P12V_INA230_CURR = 0x91,
  MB_SENSOR_C2_P12V_INA230_PWR = 0x92,
  MB_SENSOR_C3_P12V_INA230_VOL = 0x93,
  MB_SENSOR_C3_P12V_INA230_CURR = 0x94,
  MB_SENSOR_C3_P12V_INA230_PWR = 0x95,
  MB_SENSOR_C4_P12V_INA230_VOL = 0x96,
  MB_SENSOR_C4_P12V_INA230_CURR = 0x97,
  MB_SENSOR_C4_P12V_INA230_PWR = 0x98,
  MB_SENSOR_CONN_P12V_INA230_VOL = 0x99,
  MB_SENSOR_CONN_P12V_INA230_CURR = 0x9A,
  MB_SENSOR_CONN_P12V_INA230_PWR = 0x9B,
  MB_SENSOR_POWER_FAIL = 0x9C,
  MB_SENSOR_MEMORY_LOOP_FAIL = 0x9D,
  MB_SENSOR_INLET_TEMP = 0xA0,
  MB_SENSOR_OUTLET_TEMP = 0xA1,
  MB_SENSOR_INLET_REMOTE_TEMP = 0xA3,
  MB_SENSOR_OUTLET_REMOTE_TEMP = 0xA4,
  MB_SENSOR_CPU0_TEMP = 0xAA,
  MB_SENSOR_CPU1_TEMP = 0xAB,
  MB_SENSOR_CPU0_DIMM_GRPA_TEMP = 0xAC,
  MB_SENSOR_CPU0_DIMM_GRPB_TEMP = 0xAD,
  MB_SENSOR_CPU1_DIMM_GRPC_TEMP = 0xAE,
  MB_SENSOR_CPU1_DIMM_GRPD_TEMP = 0xAF,

  MB_SENSOR_VR_CPU0_VCCIN_VOLT = 0xB0,
  MB_SENSOR_VR_CPU0_VCCIN_TEMP = 0xB1,
  MB_SENSOR_VR_CPU0_VCCIN_CURR = 0xB2,
  MB_SENSOR_VR_CPU0_VCCIN_POWER = 0xB3,
  MB_SENSOR_VR_CPU0_VSA_VOLT = 0xB4,
  MB_SENSOR_VR_CPU0_VSA_TEMP = 0xB5,
  MB_SENSOR_VR_CPU0_VSA_CURR = 0xB6,
  MB_SENSOR_VR_CPU0_VSA_POWER = 0xB7,
  MB_SENSOR_VR_CPU0_VCCIO_VOLT = 0xB8,
  MB_SENSOR_VR_CPU0_VCCIO_TEMP = 0xB9,
  MB_SENSOR_VR_CPU0_VCCIO_CURR = 0xBA,
  MB_SENSOR_VR_CPU0_VCCIO_POWER = 0xBB,
  MB_SENSOR_VR_CPU0_VDDQ_GRPA_VOLT = 0xBC,
  MB_SENSOR_VR_CPU0_VDDQ_GRPA_TEMP = 0xBD,
  MB_SENSOR_VR_CPU0_VDDQ_GRPA_CURR = 0xBE,
  MB_SENSOR_VR_CPU0_VDDQ_GRPA_POWER = 0xBF,

  MB_SENSOR_FAN0_TACH = 0xC0,
  MB_SENSOR_HSC_OUT_CURR = 0xC1,
  MB_SENSOR_HSC_TEMP = 0xC2,
  MB_SENSOR_FAN1_TACH = 0xC3,
  MB_SENSOR_VR_PCH_P1V05_VOLT = 0xC4,
  MB_SENSOR_VR_PCH_P1V05_TEMP = 0xC5,
  MB_SENSOR_VR_PCH_P1V05_CURR = 0xC6,
  MB_SENSOR_VR_PCH_P1V05_POWER = 0xC7,
  MB_SENSOR_VR_PCH_PVNN_VOLT = 0xC8,
  MB_SENSOR_VR_PCH_PVNN_TEMP = 0xC9,
  MB_SENSOR_VR_PCH_PVNN_CURR = 0xCA,
  MB_SENSOR_VR_PCH_PVNN_POWER = 0xCB,
  MB_SENSOR_VR_CPU0_VDDQ_GRPB_VOLT = 0xCC,
  MB_SENSOR_VR_CPU0_VDDQ_GRPB_TEMP = 0xCD,
  MB_SENSOR_VR_CPU0_VDDQ_GRPB_CURR = 0xCE,
  MB_SENSOR_VR_CPU0_VDDQ_GRPB_POWER = 0xCF,

  MB_SENSOR_P3V_BAT = 0xD0,
  MB_SENSOR_P3V3 = 0xD1,
  MB_SENSOR_P5V = 0xD2,
  MB_SENSOR_P12V = 0xD3,
  MB_SENSOR_P1V05 = 0xD4,
  MB_SENSOR_PVNN_PCH_STBY = 0xD5,
  MB_SENSOR_P3V3_STBY = 0xD6,
  MB_SENSOR_P5V_STBY = 0xD7,
  MB_SENSOR_VR_CPU1_VDDQ_GRPC_POWER = 0xD8,
  MB_SENSOR_VR_CPU1_VDDQ_GRPD_VOLT = 0xD9,
  MB_SENSOR_VR_CPU1_VDDQ_GRPD_TEMP = 0xDA,
  MB_SENSOR_VR_CPU1_VDDQ_GRPD_CURR = 0XDB,
  MB_SENSOR_VR_CPU1_VDDQ_GRPD_POWER = 0XDC,

  MB_SENSOR_VR_CPU1_VCCIN_VOLT = 0xF0,
  MB_SENSOR_VR_CPU1_VCCIN_TEMP = 0xF1,
  MB_SENSOR_VR_CPU1_VCCIN_CURR = 0xF2,
  MB_SENSOR_VR_CPU1_VCCIN_POWER = 0xF3,
  MB_SENSOR_VR_CPU1_VSA_VOLT = 0xF4,
  MB_SENSOR_VR_CPU1_VSA_TEMP = 0xF5,
  MB_SENSOR_VR_CPU1_VSA_CURR = 0xF6,
  MB_SENSOR_VR_CPU1_VSA_POWER = 0xF7,
  MB_SENSOR_VR_CPU1_VCCIO_VOLT = 0xF8,
  MB_SENSOR_VR_CPU1_VCCIO_TEMP = 0xF9,
  MB_SENSOR_VR_CPU1_VCCIO_CURR = 0xFA,
  MB_SENSOR_VR_CPU1_VCCIO_POWER = 0xFB,
  MB_SENSOR_VR_CPU1_VDDQ_GRPC_VOLT = 0xFC,
  MB_SENSOR_VR_CPU1_VDDQ_GRPC_TEMP = 0xFD,
  MB_SENSOR_VR_CPU1_VDDQ_GRPC_CURR = 0xFE,
};

typedef struct {
  uint16_t flag;
  float ucr;
  float unc;
  float unr;
  float lcr;
  float lnc;
  float lnr;
  float pos_hyst;
  float neg_hyst;
  int curr_st;
  char name[32];

} _sensor_thresh_t;

typedef struct {
  uint16_t flag;
  float unr;
  float ucr;
  float lcr;
  uint8_t retry_cnt;
  uint8_t val_valid;
  float last_val;

} sensor_check_t;

typedef struct {
  float ucr_thresh;
  float unc_thresh;
  float unr_thresh;
  float lcr_thresh;
  float lnc_thresh;
  float lnr_thresh;
  float pos_hyst;
  float neg_hyst;
} PAL_SENSOR_THRESHOLD;

typedef struct {
  uint8_t snr_nbr;
 // int (*rd_value)(in/*, char *device, char *device, .. );
  char* snr_name;
  PAL_SENSOR_THRESHOLD snr_thresh;
} PAL_SENSOR_MAP;
#endif
