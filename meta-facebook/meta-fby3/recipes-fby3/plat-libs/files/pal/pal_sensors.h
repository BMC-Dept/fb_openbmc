#ifndef __PAL_SENSORS_H__
#define __PAL_SENSORS_H__

#include <openbmc/obmc_pal_sensors.h>

#define MAX_SENSOR_NUM         (0xFF)
#define MAX_DEVICE_NAME_SIZE   (128)
#define MB_TEMP_DEVICE  "/sys/class/i2c-dev/i2c-%d/device/%d-00%x/hwmon/hwmon*/temp1_input"
#define MB_ADC_VOLTAGE_DEVICE "/sys/devices/platform/iio-hwmon/hwmon/hwmon*/in%d_input"

//AMD1278 CMD INFO
#define PMBUS_PMON_CONFIG  (0xD4)
#define ADM1278_SLAVE_ADDR (0x80)
#define ADM1278_RSENSE     (0.5)

//PMBus
#define PMBUS_PAGE         (0x00)
#define PMBUS_VOUT_MODE    (0x20)
#define PMBUS_VOUT_COMMAND (0x21)
#define PMBUS_READ_VIN     (0x88)
#define PMBUS_READ_IIN     (0x89)
#define PMBUS_READ_VOUT    (0x8B)
#define PMBUS_READ_IOUT    (0x8C)
#define PMBUS_READ_TEMP1   (0x8D)
#define PMBUS_READ_TEMP2   (0x8E)
#define PMBUS_READ_POUT    (0x96)
#define PMBUS_READ_PIN     (0x97)

#define PREFIX_1OU_M2A 0x50
#define PREFIX_1OU_M2B 0x58
#define PREFIX_1OU_M2C 0x60
#define PREFIX_1OU_M2D 0x68
#define PREFIX_1OU_M2E 0x70
#define PREFIX_1OU_M2F 0x78

#define PREFIX_2OU_M2A 0x90
#define PREFIX_2OU_M2B 0x98
#define PREFIX_2OU_M2C 0xA0
#define PREFIX_2OU_M2D 0xA8
#define PREFIX_2OU_M2E 0xB0
#define PREFIX_2OU_M2F 0xB8

#define SUFFIX_INA231_PWR 0x00
#define SUFFIX_INA231_VOL 0x01

typedef struct {
  float ucr_thresh;
  float unc_thresh;
  float unr_thresh;
  float lcr_thresh;
  float lnc_thresh;
  float lnr_thresh;
  float pos_hyst;
  float neg_hyst;
} PAL_SENSOR_THRESHOLD;

typedef struct {
  char* snr_name;
  uint8_t id;
  int (*read_sensor) (uint8_t id, float *value);
  uint8_t stby_read;
  PAL_SENSOR_THRESHOLD snr_thresh;
  uint8_t units;
} PAL_SENSOR_MAP;

enum {
  TEMP = 1,
  CURR,
  VOLT,
  FAN,
  POWER,
};

//Sensor Table
enum {
  //BIC - threshold sensors
  BIC_SENSOR_INLET_TEMP = 0x1,
  BIC_SENSOR_OUTLET_TEMP = 0x2,
  BIC_SENSOR_FIO_TEMP = 0x3,
  BIC_SENSOR_PCH_TEMP = 0x4,
  BIC_SENSOR_CPU_THERMAL_MARGIN = 0x5,
  BIC_SENSOR_CPU_TEMP = 0x6,
  BIC_SENSOR_DIMMA0_TEMP = 0x7,
  BIC_SENSOR_DIMMB0_TEMP = 0x8,
  BIC_SENSOR_DIMMC0_TEMP = 0x9,
  BIC_SENSOR_DIMMD0_TEMP = 0xA,
  BIC_SENSOR_DIMME0_TEMP = 0xB,
  BIC_SENSOR_DIMMF0_TEMP = 0xC,
  BIC_SENSOR_M2A_TEMP = 0x15,
  BIC_SENSOR_M2B_TEMP = 0x16,
  BIC_SENSOR_HSC_TEMP = 0x2D,
  BIC_SENSOR_VCCIN_VR_TEMP = 0x1D,
  BIC_SENSOR_VCCSA_VR_TEMP = 0x21,
  BIC_SENSOR_VCCIO_VR_Temp = 0x25,
  BIC_SENSOR_P3V3_STBY_VR_TEMP = 0x29,
  BIC_SENSOR_PVDDQ_ABC_VR_TEMP = 0x0D,
  BIC_SENSOR_PVDDQ_DEF_VR_TEMP = 0x0E,

  //BIC - voltage sensors
  BIC_SENSOR_P3V3_M2A_VOL = 0x19,
  BIC_SENSOR_P3V3_M2B_VOL = 0x1A,
  BIC_SENSOR_P12V_STBY_VOL = 0x31,
  BIC_SENSOR_P3V_BAT_VOL = 0x35,
  BIC_SENSOR_P3V3_STBY_VOL = 0x33,
  BIC_SENSOR_P1V05_PCH_STBY_VOL = 0x34,
  BIC_SENSOR_PVNN_PCH_STBY_VOL = 0x36,
  BIC_SENSOR_P3V3_VOL = 0x32,
  BIC_SENSOR_HSC_INPUT_VOL = 0x2E,
  BIC_SENSOR_VCCIN_VR_VOL = 0x1F,
  BIC_SENSOR_VCCSA_VR_VOL = 0x23,
  BIC_SENSOR_VCCIO_VR_VOL =0x27,
  BIC_SENSOR_P3V3_STBY_VR_VOL = 0x2B,
  BIC_PVDDQ_ABC_VR_VOL = 0x11,
  BIC_PVDDQ_DEF_VR_VOL = 0x12,

  //BIC - current sensors
  BIC_SENSOR_P3V3_M2A_CUR = 0x1B,
  BIC_SENSOR_P3V3_M2B_CUR = 0x1C,
  BIC_SENSOR_HSC_OUTPUT_CUR1 = 0x2F,
  BIC_SENSOR_HSC_OUTPUT_CUR2 = 0x2F,
  BIC_SENSOR_VCCIN_VR_CUR = 0x1E,
  BIC_SENSOR_VCCSA_VR_CUR = 0x22,
  BIC_SENSOR_VCCIO_VR_CUR = 0x26,
  BIC_SENSOR_P3V3_STBY_VR_CUR = 0x2A,
  BIC_SENSOR_PVDDQ_ABC_VR_CUR = 0x0F,
  BIC_SENSOR_PVDDQ_DEF_VR_CUR = 0x10,

  //BIC - power sensors
  BIC_SENSOR_P3V3_M2A_PWR = 0x17,
  BIC_SENSOR_P3V3_M2B_PWR = 0x18,
  BIC_SENSOR_HSC_INPUT_PWR1 = 0x30,
  BIC_SENSOR_HSC_INPUT_PWR2 = 0x30,
  BIC_SENSOR_VCCIN_VR_POUT = 0x20,
  BIC_SENSOR_VCCSA_VR_POUT = 0x24,
  BIC_SENSOR_VCCIO_VR_POUT = 0x28,
  BIC_SENSOR_P3V3_STBY_VR_POUT = 0x2C,
  BIC_SENSOR_PVDDQ_ABC_VR_POUT = 0x13,
  BIC_SENSOR_PVDDQ_DEF_VR_POUT = 0x14,

  //BIC 1OU EXP Sensors
  BIC_1OU_EXP_SENSOR_OUTLET_TEMP = 0x40,
  BIC_1OU_EXP_SENSOR_P12_VOL = 0x41,
  BIC_1OU_EXP_SENSOR_P1V8_VOL = 0x42,
  BIC_1OU_EXP_SENSOR_P3V3_VOL = 0x43,
  BIC_1OU_EXP_SENSOR_P3V3_STBY_VR_VOL = 0x44,
  BIC_1OU_EXP_SENSOR_P3V3_STBY2_VR_VOL = 0x45,
  BIC_1OU_EXP_SENSOR_P3V3_M2A_PWR = (PREFIX_1OU_M2A | SUFFIX_INA231_PWR),
  BIC_1OU_EXP_SENSOR_P3V3_M2A_VOL = (PREFIX_1OU_M2A | SUFFIX_INA231_VOL),
  BIC_1OU_EXP_SENSOR_P3V3_M2B_PWR = (PREFIX_1OU_M2B | SUFFIX_INA231_PWR),
  BIC_1OU_EXP_SENSOR_P3V3_M2B_VOL = (PREFIX_1OU_M2B | SUFFIX_INA231_VOL),
  BIC_1OU_EXP_SENSOR_P3V3_M2C_PWR = (PREFIX_1OU_M2C | SUFFIX_INA231_PWR),
  BIC_1OU_EXP_SENSOR_P3V3_M2C_VOL = (PREFIX_1OU_M2C | SUFFIX_INA231_VOL),
  BIC_1OU_EXP_SENSOR_P3V3_M2D_PWR = (PREFIX_1OU_M2D | SUFFIX_INA231_PWR),
  BIC_1OU_EXP_SENSOR_P3V3_M2D_VOL = (PREFIX_1OU_M2D | SUFFIX_INA231_VOL),
  BIC_1OU_EXP_SENSOR_P3V3_M2E_PWR = (PREFIX_1OU_M2E | SUFFIX_INA231_PWR),
  BIC_1OU_EXP_SENSOR_P3V3_M2E_VOL = (PREFIX_1OU_M2E | SUFFIX_INA231_VOL),
  BIC_1OU_EXP_SENSOR_P3V3_M2F_PWR = (PREFIX_1OU_M2F | SUFFIX_INA231_PWR),
  BIC_1OU_EXP_SENSOR_P3V3_M2F_VOL = (PREFIX_1OU_M2F | SUFFIX_INA231_VOL),

  //BIC 2OU EXP Sensors
  BIC_2OU_EXP_SENSOR_OUTLET_TEMP = 0x80,
  BIC_2OU_EXP_SENSOR_P12_VOL = 0x81,
  BIC_2OU_EXP_SENSOR_P1V8_VOL = 0x82,
  BIC_2OU_EXP_SENSOR_P3V3_VOL = 0x83,
  BIC_2OU_EXP_SENSOR_P3V3_STBY_VR_VOL = 0x84,
  BIC_2OU_EXP_SENSOR_P3V3_STBY2_VR_VOL = 0x85,
  BIC_2OU_EXP_SENSOR_P3V3_M2A_PWR = (PREFIX_2OU_M2A | SUFFIX_INA231_PWR),
  BIC_2OU_EXP_SENSOR_P3V3_M2A_VOL = (PREFIX_2OU_M2A | SUFFIX_INA231_VOL),
  BIC_2OU_EXP_SENSOR_P3V3_M2B_PWR = (PREFIX_2OU_M2B | SUFFIX_INA231_PWR),
  BIC_2OU_EXP_SENSOR_P3V3_M2B_VOL = (PREFIX_2OU_M2B | SUFFIX_INA231_VOL),
  BIC_2OU_EXP_SENSOR_P3V3_M2C_PWR = (PREFIX_2OU_M2C | SUFFIX_INA231_PWR),
  BIC_2OU_EXP_SENSOR_P3V3_M2C_VOL = (PREFIX_2OU_M2C | SUFFIX_INA231_VOL),
  BIC_2OU_EXP_SENSOR_P3V3_M2D_PWR = (PREFIX_2OU_M2D | SUFFIX_INA231_PWR),
  BIC_2OU_EXP_SENSOR_P3V3_M2D_VOL = (PREFIX_2OU_M2D | SUFFIX_INA231_VOL),
  BIC_2OU_EXP_SENSOR_P3V3_M2E_PWR = (PREFIX_2OU_M2E | SUFFIX_INA231_PWR),
  BIC_2OU_EXP_SENSOR_P3V3_M2E_VOL = (PREFIX_2OU_M2E | SUFFIX_INA231_VOL),
  BIC_2OU_EXP_SENSOR_P3V3_M2F_PWR = (PREFIX_2OU_M2F | SUFFIX_INA231_PWR),
  BIC_2OU_EXP_SENSOR_P3V3_M2F_VOL = (PREFIX_2OU_M2F | SUFFIX_INA231_VOL),

  //BMC - sensors
  BMC_SENSOR_INLET_TEMP = 0x80,
  BMC_SENSOR_OUTLET_TEMP = 0x81,
  NIC_SENSOR_MEZZ_TEMP = 0x82,
  BMC_SENSOR_FAN0_TACH = 0x83,
  BMC_SENSOR_FAN1_TACH = 0x84,
  BMC_SENSOR_FAN2_TACH = 0x85,
  BMC_SENSOR_FAN3_TACH = 0x86,
  BMC_SENSOR_FAN4_TACH = 0x87,
  BMC_SENSOR_FAN5_TACH = 0x88,
  BMC_SENSOR_FAN6_TACH = 0x89,
  BMC_SENSOR_FAN7_TACH = 0x8A,
  BMC_SENSOR_P5V = 0x8B,
  BMC_SENSOR_P12V = 0x8C,
  BMC_SENSOR_P3V3_STBY = 0x8D,
  BMC_SENSOR_P1V15_BMC_STBY = 0x8E,
  BMC_SENSOR_P1V2_BMC_STBY = 0x8F,
  BMC_SENSOR_P2V5_BMC_STBY = 0x90,
  BMC_SENSOR_P12V_MEDUSA = 0x91,
  BMC_SENSOR_HSC_IN_VOLT = 0x92,
  BMC_SENSOR_HSC_TEMP = 0x93,
};

//ADC INFO
enum {
  ADC0 = 0,
  ADC1,
  ADC2,
  ADC3,
  ADC4,
  ADC5,
  ADC6,
  ADC7,
  ADC8,
  ADC9,
  ADC10,
  ADC11, 
  ADC12, 
  ADC13, 
  ADC14,
};

//GENERIC I2C Sensors
enum {
  TEMP_INLET = 0,
  TEMP_OUTLET,
  TEMP_MEZZ,
};

//ADM1278 INFO
enum {
  ADM1278_VOLTAGE = 0,
  ADM1278_CURRENT,
  ADM1278_POWER,
  ADM1278_TEMP,
};

typedef struct {
  uint8_t type;
  float m;
  float b;
  float r;
} PAL_ADM1278_INFO;

//HSC INFO
enum {
  HSC_ID0,
};

typedef struct {
  uint8_t id;
  uint8_t slv_addr;
  PAL_ADM1278_INFO* info;
} PAL_HSC_INFO;

typedef struct {
  uint8_t id;
  uint8_t bus;
  uint8_t slv_addr;
} PAL_I2C_BUS_INFO;

typedef struct {
  int integer :10;
  uint8_t fract :6;
} PAL_S10_6_FORMAT;

#endif
