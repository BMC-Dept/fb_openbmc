# rsyslog configuration file
# 
# This config uses old-style formatting. For more advanced features,
# RainerScript configuration is suggested.
#
# For more information see /usr/share/doc/rsyslog-*/rsyslog_conf.html
# or latest version online at http://www.rsyslog.com/doc/rsyslog_conf.html 
# If you experience problems, see http://www.rsyslog.com/doc/troubleshoot.html
#

$ModLoad imuxsock # provides support for local system logging (e.g. via logger command)
$ModLoad imklog   # kernel logging (formerly provided by rklogd)

# Use format recognized by log-util.
# XXX we might need a different format for the syslog host for SCUBA.
$template TraditionalFileFormat,"%TIMESTAMP% %HOSTNAME% %pri-text% %syslogtag%%msg:::sp-if-no-1st-sp%%msg:::drop-last-lf%\n"
$ActionFileDefaultTemplate TraditionalFileFormat

#
# Set the default permissions
#
$FileOwner root
$FileGroup adm
$FileCreateMode 0640
$DirCreateMode 0755
$Umask 0022

# Remote Logging (we use TCP for reliable delivery)
# An on-disk queue is created for this action. If the remote host is
# down, messages are spool/rsysloged to disk and sent when it is up again.
$ActionQueueType LinkedList   # run asynchronously
$ActionResumeRetryCount -1    # infinite retries if host is down
# remote host is: name/ip:port, e.g. 192.168.0.1:514, port optional
#*.* @@remote-host:514
# Store everything else
*.*             /var/log/messages

# Save boot messages also to boot.log
local7.*        /var/log/boot.log

$ActionQueueType LinkedList   # run asynchronously
$ActionResumeRetryCount -1    # infinite retries if host is down
$ActionResumeInterval 60 # Retry every 60 seconds

# Send emergency messages to the persistent log used by log-util
# limit size to 200k
$outchannel logfile_channel, /mnt/data/logfile, 204800, /usr/local/fbpackages/rotate/logfile
*.crit          :omfile:$logfile_channel

# Critical SEL
$outchannel cri_sel_channel, /mnt/data/cri_sel, 204800, /usr/local/fbpackages/rotate/cri_sel
local0.err      :omfile:$cri_sel_channel

# TODO Enable logging to a remote rsyslog server
#$ActionQueueType LinkedList   # run asynchronously
#$ActionResumeRetryCount 20    # Retry 20 times before giving up.
#$ActionResumeInterval 60 # Retry every 60 seconds

# Log critical errors to syslog server
*.crit          @@syslog
