From af56cea5321028af38c29abe89e8fc900e9f54d6 Mon Sep 17 00:00:00 2001
From: "Jason M. Bills" <jason.m.bills@linux.intel.com>
Date: Mon, 22 Feb 2021 16:47:15 -0800
Subject: [PATCH] Add PECI Telemetry command

This adds support for the following PECI Telemetry commands:
   Telemetry Discovery
   Get Telemetry Sample
   Config Watcher
   Get Crashlog Sample

Signed-off-by: Jason M. Bills <jason.m.bills@linux.intel.com>
---
 drivers/peci/peci-core.c        | 176 ++++++++++++++++++++++++++++++++
 include/uapi/linux/peci-ioctl.h |  85 +++++++++++++++
 2 files changed, 261 insertions(+)

diff --git a/drivers/peci/peci-core.c b/drivers/peci/peci-core.c
index 1e0de6417564..342e1e00fbe7 100644
--- a/drivers/peci/peci-core.c
+++ b/drivers/peci/peci-core.c
@@ -340,6 +340,13 @@ static int peci_scan_cmd_mask(struct peci_adapter *adapter)
 		revision = FIELD_GET(REVISION_NUM_MASK, dib);
 	}
 
+	if (revision >= 0x41) { /* Rev. 4.1 */
+		adapter->cmd_mask |= BIT(PECI_CMD_TELEMETRY_DISC);
+		adapter->cmd_mask |= BIT(PECI_CMD_TELEMETRY_GET_TELEM_SAMPLE);
+		adapter->cmd_mask |= BIT(PECI_CMD_TELEMETRY_CONFIG_WATCHER_RD);
+		adapter->cmd_mask |= BIT(PECI_CMD_TELEMETRY_CONFIG_WATCHER_WR);
+		adapter->cmd_mask |= BIT(PECI_CMD_TELEMETRY_GET_CRASHLOG_SAMPLE);
+	}
 	if (revision >= 0x40) { /* Rev. 4.0 */
 		adapter->cmd_mask |= BIT(PECI_CMD_RD_IA_MSREX);
 		adapter->cmd_mask |= BIT(PECI_CMD_RD_END_PT_CFG);
@@ -1164,6 +1171,170 @@ static int peci_cmd_crashdump_get_frame(struct peci_adapter *adapter,
 	return ret;
 }
 
+static int peci_cmd_telemetry_disc(struct peci_adapter *adapter, void *vmsg)
+{
+	struct peci_telemetry_disc_msg *umsg = vmsg;
+	struct peci_xfer_msg *msg;
+	int ret;
+
+	msg = peci_get_xfer_msg(PECI_TELEMETRY_DISC_WRITE_LEN,
+				PECI_TELEMETRY_DISC_READ_LEN_BASE +
+				umsg->rx_len);
+	if (!msg)
+		return -ENOMEM;
+
+	msg->addr = umsg->addr;
+	msg->tx_buf[0] = PECI_TELEMETRY_CMD;
+	msg->tx_buf[1] = 0x00;        /* request byte for Host ID | Retry bit */
+				      /* Host ID is 0 for PECI 3.0 */
+	msg->tx_buf[2] = PECI_TELEMETRY_DISC_VERSION;
+	msg->tx_buf[3] = PECI_TELEMETRY_DISC_OPCODE;
+	msg->tx_buf[4] = umsg->subopcode;
+	msg->tx_buf[5] = umsg->param0;
+	msg->tx_buf[6] = (u8)umsg->param1;
+	msg->tx_buf[7] = (u8)(umsg->param1 >> 8);
+	msg->tx_buf[8] = umsg->param2;
+
+	ret = peci_xfer_with_retries(adapter, msg, false);
+	if (!ret)
+		memcpy(umsg->data, &msg->rx_buf[1], umsg->rx_len);
+
+	umsg->cc = msg->rx_buf[0];
+	peci_put_xfer_msg(msg);
+
+	return ret;
+}
+
+static int peci_cmd_telemetry_get_telem_sample(struct peci_adapter *adapter, void *vmsg)
+{
+	struct peci_telemetry_get_telem_sample_msg *umsg = vmsg;
+	struct peci_xfer_msg *msg;
+	int ret;
+
+	msg = peci_get_xfer_msg(PECI_TELEMETRY_GET_TELEM_SAMPLE_WRITE_LEN,
+				PECI_TELEMETRY_GET_TELEM_SAMPLE_READ_LEN);
+	if (!msg)
+		return -ENOMEM;
+
+	msg->addr = umsg->addr;
+	msg->tx_buf[0] = PECI_TELEMETRY_CMD;
+	msg->tx_buf[1] = 0x00;        /* request byte for Host ID | Retry bit */
+				      /* Host ID is 0 for PECI 3.0 */
+	msg->tx_buf[2] = PECI_TELEMETRY_GET_TELEM_SAMPLE_VERSION;
+	msg->tx_buf[3] = PECI_TELEMETRY_GET_TELEM_SAMPLE_OPCODE;
+	msg->tx_buf[4] = (u8)umsg->index;
+	msg->tx_buf[5] = (u8)(umsg->index >> 8);
+	msg->tx_buf[6] = (u8)umsg->sample;
+	msg->tx_buf[7] = (u8)(umsg->sample >> 8);
+
+	ret = peci_xfer_with_retries(adapter, msg, false);
+	if (!ret)
+		memcpy(umsg->data, &msg->rx_buf[1], 8);
+
+	umsg->cc = msg->rx_buf[0];
+	peci_put_xfer_msg(msg);
+
+	return ret;
+}
+
+static int peci_cmd_telemetry_config_watcher_rd(struct peci_adapter *adapter, void *vmsg)
+{
+	struct peci_telemetry_config_watcher_msg *umsg = vmsg;
+	struct peci_xfer_msg *msg;
+	int ret;
+
+	msg = peci_get_xfer_msg(PECI_TELEMETRY_CONFIG_WATCHER_RD_WRITE_LEN,
+				PECI_TELEMETRY_CONFIG_WATCHER_RD_READ_LEN);
+	if (!msg)
+		return -ENOMEM;
+
+	msg->addr = umsg->addr;
+	msg->tx_buf[0] = PECI_TELEMETRY_CMD;
+	msg->tx_buf[1] = 0x00;        /* request byte for Host ID | Retry bit */
+				      /* Host ID is 0 for PECI 3.0 */
+	msg->tx_buf[2] = PECI_TELEMETRY_CONFIG_WATCHER_VERSION;
+	msg->tx_buf[3] = PECI_TELEMETRY_CONFIG_WATCHER_OPCODE;
+	msg->tx_buf[4] = PECI_TELEMETRY_CONFIG_WATCHER_RD_PARAM;
+	msg->tx_buf[5] = (u8)umsg->watcher;
+	msg->tx_buf[6] = (u8)(umsg->watcher >> 8);
+	msg->tx_buf[7] = (u8)umsg->offset;
+	msg->tx_buf[8] = (u8)(umsg->offset >> 8);
+
+	ret = peci_xfer_with_retries(adapter, msg, false);
+	if (!ret)
+		memcpy(umsg->data, &msg->rx_buf[1], 8);
+
+	umsg->cc = msg->rx_buf[0];
+	peci_put_xfer_msg(msg);
+
+	return ret;
+}
+
+static int peci_cmd_telemetry_config_watcher_wr(struct peci_adapter *adapter, void *vmsg)
+{
+	struct peci_telemetry_config_watcher_msg *umsg = vmsg;
+	struct peci_xfer_msg *msg;
+	int ret, i;
+
+	msg = peci_get_xfer_msg(PECI_TELEMETRY_CONFIG_WATCHER_WR_WRITE_LEN,
+				PECI_TELEMETRY_CONFIG_WATCHER_WR_READ_LEN);
+	if (!msg)
+		return -ENOMEM;
+
+	msg->addr = umsg->addr;
+	msg->tx_buf[0] = PECI_TELEMETRY_CMD;
+	msg->tx_buf[1] = 0x00;        /* request byte for Host ID | Retry bit */
+				      /* Host ID is 0 for PECI 3.0 */
+	msg->tx_buf[2] = PECI_TELEMETRY_CONFIG_WATCHER_VERSION;
+	msg->tx_buf[3] = PECI_TELEMETRY_CONFIG_WATCHER_OPCODE;
+	msg->tx_buf[4] = PECI_TELEMETRY_CONFIG_WATCHER_WR_PARAM;
+	msg->tx_buf[5] = (u8)umsg->watcher;
+	msg->tx_buf[6] = (u8)(umsg->watcher >> 8);
+	msg->tx_buf[7] = (u8)umsg->offset;
+	msg->tx_buf[8] = (u8)(umsg->offset >> 8);
+	for (i = 0; i < sizeof(umsg->data); i++)
+		msg->tx_buf[9 + i] = umsg->data[i];
+
+	ret = peci_xfer_with_retries(adapter, msg, false);
+
+	umsg->cc = msg->rx_buf[0];
+	peci_put_xfer_msg(msg);
+
+	return ret;
+}
+
+static int peci_cmd_telemetry_get_crashlog_sample(struct peci_adapter *adapter, void *vmsg)
+{
+	struct peci_telemetry_get_crashlog_sample_msg *umsg = vmsg;
+	struct peci_xfer_msg *msg;
+	int ret;
+
+	msg = peci_get_xfer_msg(PECI_TELEMETRY_GET_CRASHLOG_SAMPLE_WRITE_LEN,
+				PECI_TELEMETRY_GET_CRASHLOG_SAMPLE_READ_LEN);
+	if (!msg)
+		return -ENOMEM;
+
+	msg->addr = umsg->addr;
+	msg->tx_buf[0] = PECI_TELEMETRY_CMD;
+	msg->tx_buf[1] = 0x00;        /* request byte for Host ID | Retry bit */
+				      /* Host ID is 0 for PECI 3.0 */
+	msg->tx_buf[2] = PECI_TELEMETRY_GET_CRASHLOG_SAMPLE_VERSION;
+	msg->tx_buf[3] = PECI_TELEMETRY_GET_CRASHLOG_SAMPLE_OPCODE;
+	msg->tx_buf[4] = (u8)umsg->index;
+	msg->tx_buf[5] = (u8)(umsg->index >> 8);
+	msg->tx_buf[6] = (u8)umsg->sample;
+	msg->tx_buf[7] = (u8)(umsg->sample >> 8);
+
+	ret = peci_xfer_with_retries(adapter, msg, false);
+	if (!ret)
+		memcpy(umsg->data, &msg->rx_buf[1], 8);
+
+	umsg->cc = msg->rx_buf[0];
+	peci_put_xfer_msg(msg);
+
+	return ret;
+}
+
 typedef int (*peci_cmd_fn_type)(struct peci_adapter *, void *);
 
 static const peci_cmd_fn_type peci_cmd_fn[PECI_CMD_MAX] = {
@@ -1184,6 +1355,11 @@ static const peci_cmd_fn_type peci_cmd_fn[PECI_CMD_MAX] = {
 	peci_cmd_wr_end_pt_cfg,
 	peci_cmd_crashdump_disc,
 	peci_cmd_crashdump_get_frame,
+	peci_cmd_telemetry_disc,
+	peci_cmd_telemetry_get_telem_sample,
+	peci_cmd_telemetry_config_watcher_rd,
+	peci_cmd_telemetry_config_watcher_wr,
+	peci_cmd_telemetry_get_crashlog_sample,
 };
 
 /**
diff --git a/include/uapi/linux/peci-ioctl.h b/include/uapi/linux/peci-ioctl.h
index ab7c0239103a..8328a6942274 100644
--- a/include/uapi/linux/peci-ioctl.h
+++ b/include/uapi/linux/peci-ioctl.h
@@ -77,6 +77,11 @@ enum peci_cmd {
 	PECI_CMD_WR_END_PT_CFG,
 	PECI_CMD_CRASHDUMP_DISC,
 	PECI_CMD_CRASHDUMP_GET_FRAME,
+	PECI_CMD_TELEMETRY_DISC,
+	PECI_CMD_TELEMETRY_GET_TELEM_SAMPLE,
+	PECI_CMD_TELEMETRY_CONFIG_WATCHER_RD,
+	PECI_CMD_TELEMETRY_CONFIG_WATCHER_WR,
+	PECI_CMD_TELEMETRY_GET_CRASHLOG_SAMPLE,
 	PECI_CMD_MAX
 };
 
@@ -603,6 +608,66 @@ struct peci_crashdump_get_frame_msg {
 	__u8	data[16];
 } __attribute__((__packed__));
 
+struct peci_telemetry_disc_msg {
+#define PECI_TELEMETRY_DISC_WRITE_LEN		9
+#define PECI_TELEMETRY_DISC_READ_LEN_BASE	1
+#define PECI_TELEMETRY_DISC_VERSION		0
+#define PECI_TELEMETRY_DISC_OPCODE		1
+#define PECI_TELEMETRY_CMD			0x81
+
+	__u8	addr;
+	__u8	subopcode;
+	__u8	cc;
+	__u8	param0;
+	__u16	param1;
+	__u8	param2;
+	__u8	rx_len;
+	__u8	data[10];
+} __attribute__((__packed__));
+
+struct peci_telemetry_get_telem_sample_msg {
+#define PECI_TELEMETRY_GET_TELEM_SAMPLE_WRITE_LEN	8
+#define PECI_TELEMETRY_GET_TELEM_SAMPLE_READ_LEN	9
+#define PECI_TELEMETRY_GET_TELEM_SAMPLE_VERSION	0
+#define PECI_TELEMETRY_GET_TELEM_SAMPLE_OPCODE	2
+
+	__u8	addr;
+	__u8	cc;
+	__u16	index;
+	__u16	sample;
+	__u8	data[8];
+} __attribute__((__packed__));
+
+struct peci_telemetry_config_watcher_msg {
+#define PECI_TELEMETRY_CONFIG_WATCHER_RD_WRITE_LEN	9
+#define PECI_TELEMETRY_CONFIG_WATCHER_RD_READ_LEN	9
+#define PECI_TELEMETRY_CONFIG_WATCHER_WR_WRITE_LEN	17
+#define PECI_TELEMETRY_CONFIG_WATCHER_WR_READ_LEN	1
+#define PECI_TELEMETRY_CONFIG_WATCHER_VERSION		0
+#define PECI_TELEMETRY_CONFIG_WATCHER_OPCODE		3
+#define PECI_TELEMETRY_CONFIG_WATCHER_RD_PARAM		0
+#define PECI_TELEMETRY_CONFIG_WATCHER_WR_PARAM		1
+
+	__u8	addr;
+	__u8	cc;
+	__u16	watcher;
+	__u16	offset;
+	__u8	data[8];
+} __attribute__((__packed__));
+
+struct peci_telemetry_get_crashlog_sample_msg {
+#define PECI_TELEMETRY_GET_CRASHLOG_SAMPLE_WRITE_LEN	8
+#define PECI_TELEMETRY_GET_CRASHLOG_SAMPLE_READ_LEN	9
+#define PECI_TELEMETRY_GET_CRASHLOG_SAMPLE_VERSION	0
+#define PECI_TELEMETRY_GET_CRASHLOG_SAMPLE_OPCODE	12
+
+	__u8	addr;
+	__u8	cc;
+	__u16	index;
+	__u16	sample;
+	__u8	data[8];
+} __attribute__((__packed__));
+
 #define PECI_IOC_BASE	0xb8
 
 #define PECI_IOC_XFER \
@@ -662,4 +727,24 @@ struct peci_crashdump_get_frame_msg {
 	_IOWR(PECI_IOC_BASE, PECI_CMD_CRASHDUMP_GET_FRAME, \
 	      struct peci_crashdump_get_frame_msg)
 
+#define PECI_IOC_TELEMETRY_DISC \
+	_IOWR(PECI_IOC_BASE, PECI_CMD_TELEMETRY_DISC, \
+	      struct peci_telemetry_disc_msg)
+
+#define PECI_IOC_TELEMETRY_GET_TELEM_SAMPLE \
+	_IOWR(PECI_IOC_BASE, PECI_CMD_TELEMETRY_GET_TELEM_SAMPLE, \
+	      struct peci_telemetry_get_telem_sample_msg)
+
+#define PECI_IOC_TELEMETRY_CONFIG_WATCHER_RD \
+	_IOWR(PECI_IOC_BASE, PECI_CMD_TELEMETRY_CONFIG_WATCHER_RD, \
+	      struct peci_telemetry_config_watcher_msg)
+
+#define PECI_IOC_TELEMETRY_CONFIG_WATCHER_WR \
+	_IOWR(PECI_IOC_BASE, PECI_CMD_TELEMETRY_CONFIG_WATCHER_WR, \
+	      struct peci_telemetry_config_watcher_msg)
+
+#define PECI_IOC_TELEMETRY_GET_CRASHLOG_SAMPLE \
+	_IOWR(PECI_IOC_BASE, PECI_CMD_TELEMETRY_GET_CRASHLOG_SAMPLE, \
+	      struct peci_telemetry_get_crashlog_sample_msg)
+
 #endif /* __PECI_IOCTL_H */
-- 
2.17.1

